# Merge Action
mergeProgressMsg=Merging {0} into {1}
mergeSaveStateQuestion=Do you want to save the current merge state for later resolution of the remaining conflicts or abort the merge?
mergeSavedStateTitle=Saved merge state
mergeSavedStateMsg=Saved the current merge state, use "resolve conflicts" to resume fixing the remaining conflicts
mergeBranchesUpToDateTitle=Already up-to-date
mergeBranchesUpToDateMsg=Branches are already up-to-date/merged
# Pull Action
pullActionName=Pull
pullHandleTitleMsg=Updating Project...
pullTooltipMsg=Pull all changes from the remote Branch
pullSuccessTitle=Pull successful
pullSuccessMsg=The pull --rebase was successful, files are now up-to-date
pullAlreadyUpToDate=Files are already up-to-date
pullUnclearRebaseStateTitle=Unclear rebase state, aborting rebase
pullUnclearRebaseStateMsg=The current rebase state is neither a conflict nor success, aborting rebase
authCancelledLogMessage=Pull was aborted because authentication was cancelled. If you didn't cancel the authentication check the IDE Log for the underlying exception to get more information
pullAbortErrorMsg=The abort of the rebase failed with state: 
pullAbortTitle=Aborted pull
pullAbortDueToAuthCancel=Pull was aborted because authentication was cancelled
pullAbortMsg=Pull abort was successful, all local content restored to state before pull
pullExistingConflictingFilesTitle=Found conflicting files
pullExistingConflictingFilesMsg=There are files that have the conflicting state, resolve these conflicts first before pulling
pullFailedUpstreamBranchMsg=Pull failed, could not determine upstream branch
pullFailedExceptionMsg=Pull failed due to an exception
rebaseMergeCommitsWarning=<html>Local unpushed commits contain a merge-commit, rebasing a merge-commit can lead to lost data.<br>Do you want to merge the remote branch into the current branch instead?</html>
pullBrancheUpToDateTitle=Already up-to-date
pullBrancheUpToDateMsg=The local branch already has all upstream changes
pullFetchHandleMsg=Checking remote for updates
pullRebaseHandleMsg=Rebasing
pullResolveConflictsHandleMsg=Resolving Conflicts
pullGetRepoHandleMsg=Retrieving Repository
pullFailedRepoStateMsg=Failed to read repository state for the remote tracked branch
#Commit Action
noFilesToCommitMsg=No changed files detected, so there is nothing to commit
noFilesToCommitTitle=No files to commit
# CherryPick Action
cherryPickDialogTitle=Cherry Pick conflicts
cherryPickAbortMsg=Aborting Cherry Pick by resetting to current HEAD
cherryPickErrorMsg=Error during Cherry Pick
cherryPickSuccessMsg=Cherry Pick success
cherryPickUncleanStateMsg=Aborting cherry Pick, please make sure the working tree is clean before Cherry Picking
# Delete Branch Action
deleteBranchTitle=Delete Branch
deleteBranchProgressMsg=Deleting branch
deleteBranchDeleteRemote=Should the remote branch be deleted as well (if existent)?
deleteBranchAbortMsg=Delete was aborted
deleteBranchErrorMsg=An error occurred while deleting the branch
deleteBranchSuccessMsg=Deleting branch was successful
deleteBranchUnmergedChangesMsg=<html>Branch contains unmerged changes, do you want to force delete it?<br><br><p style="color:red">WARNING: All changes on that branch are lost</p><html>
deleteBranchUnmergedChangesTitle=Branch contains unmerged changes
# Checkout Action
checkoutTitle=Checkout
checkoutTooltip=Command to change the branch to another one
checkoutProgressMsg=Checking out
checkoutChooseNameMsg=Choose a name for the local branch
checkoutChooseNameTitle=Remote Branch Checkout
checkoutProgressUnstashMsg=Un-stashing saved uncommitted local changes
#FetchAction
fetchTitle=Fetch
fetchProgressMsg=Fetching from remote(s)
fetchSuccessMsg=Fetch from all defined remotes was successful
fetchPrivateKeyInvalid=Privatekey is invalid, check if it really is a ssh key
fetchUnspecifiedErrorMsg=An error occurred while performing the fetch
fetchFailedUpdatesTitle=Fetch succeeded with failed updates
fetchFailedUpdatesMsg=First failed update: {0}. For all failed updates see IDE Log
fetchFailedUpdatesLog=Fetch succeeded with failed updates:
fetchAbortTitle=Aborted fetch
fetchAbortMessage=Fetch was aborted because authentication was cancelled. If you didn't cancel the authentication check the IDE Log for the underlying exception to get more information
fetchAbortLog=Git: Received an auth cancelled exception, underlying cause:
#ResetAction
resetTitle=Reset Current Branch to here
resetProgressMsg=Resetting to commit {0}
resetSuccessTitle=Reset success
resetSuccessMsg=Resetting back to commit with id {0} and option {1} was successful
#ResolveConflictsAction
tbnfeMsg=Unable to determine the cause of the conflict, should a HARD reset to the state before the merge/pull/rebase/cherry pick be performed?
tbnfeDetailsMsg=<html>The plugin is not able to determine the target branch or commit of the operation that led to the conflict.<br>\
  Because of this, the merge dialog cannot be created.<br><br>\
  You can either resolve the conflicting files manually and use the "Mark Resolved" action on them, or click the "Reset HEAD" button and let the plugin perform<br>\
  a HARD reset to the commit the current branch was on before the operation that caused the conflict. You can also manually trigger the reset via the git log<br>\
  However, this looses all progress from the merge so far, and auto-stashed changes will have to be manually unstashed again</html>
resolveConflictsTitle=Resolve Conflicts
resolveConflictsFailureMsg=Could determine neither the target nor the state before the operation that led to the conflict, please reset the current branch to the commit you based from manually
#StashChangesAction
stashProgressMsg=Stashing existing changes
stashFailureMsg=An error occurred during the stash process
#UnStashChangesAction
unstashFailureMsg=An error occurred while trying to unstash
unstashProgressMsg=Unstashing changes
unstashConflictDialogTitle=Stash Conflicts
# Misc
unstashChangesMessage=Un-stashing saved uncommitted local changes
noValidRepoMsg=No valid repository found
unknownHostMsg=Could not resolve the repository url {0}, make sure it is a valid address.
# RenormalizeNewlinesAction
renormalizeNewlinesTitle=Renormalize newlines
renormalizeNewlinesFailureNoRepo=Could not find suitable git repo, renormalize newlines was not attempted
renormalizeNewlinesFailureException=Renormalizing the newlines failed
stashDoneMsg=Stashed current changes with commit id {0}
stashDiscardMsg=Git: Discarded current changes by resetting to HEAD commit with id {0}
stashDiscardErrorMsg=Cannot determine HEAD, so the current changes can't be discarded
# index.lock
indexLockTitle=Git error: index.lock
indexLockText=<html>Git error: The index is locked.<br/>This might be due to a concurrent or crashed process. Do you want to delete the locked index file?<br/><b>Warning:</b> If you have any git processes running, please try to exit them first before deleting the index.lock file.</html>
